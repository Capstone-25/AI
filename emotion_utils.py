from collections import Counter

emotion_keywords = [
    "불안", "우울", "짜증", "분노", "외로움", "기쁨", "슬픔", "스트레스", "피곤", "무기력"
]

emotion_guidelines = {
    "불안": "사용자의 불안감을 줄이기 위해 **현재에 집중할 수 있는 활동**(예: 호흡 조절, 감각 자극, 일기 쓰기 등)을 제안해줘.",
    "우울": "**작은 성취를 느낄 수 있는 활동**(예: 산책, 간단한 정리, 음악 듣기 등)을 유도하고, 자기비난을 부드럽게 재구성해줘.",
    "무기력": "**간단한 루틴**(예: 물 마시기, 햇볕 쬐기 등)을 제안하고, “지금 아무것도 하지 않아도 괜찮다”는 자기수용 메시지를 전달해줘.",
    "짜증": "**감정을 다루는 구체적 방법**(예: 마음을 진정시키는 문장, 숨 고르기 등)을 제안해줘.",
    "분노": "**반응을 멈추고 감정을 관찰하는 태도**를 유도하고, 감정에 휘둘리지 않도록 돕는 말을 전해줘.",
    "외로움": "연결감을 느낄 수 있는 활동(예: 편지쓰기, 공감 메시지 등)을 제안하고, 외로운 감정이 부정적인 것이 아님을 알려줘.",
    "기쁨": "기쁨을 **강화하고 축하해주는 말**을 전달하며, 스스로를 칭찬할 수 있도록 격려해줘.",
    "슬픔": "**감정을 억누르지 않도록 표현을 유도**하고, “그럴 수 있다”는 **수용적 태도**로 다가가줘.",
    "스트레스": "**스트레스를 줄이기 위한 작은 실천**(예: 5분 휴식, 정리 정돈 등)을 유도하고, “충분히 노력하고 있다”는 인정을 표현해줘.",
    "피곤": "**신체 상태에 집중하도록 유도**하고, 휴식을 권유하며 자책하지 않도록 위로해줘."
}
def extract_recent_emotions(meta, keywords, recent_n=3, top_k=3):
    recent_text = " ".join([m["summary"] for m in meta[-recent_n:]])
    found = [e for e in keywords if e in recent_text]
    freq = Counter(found)
    return [e for e, _ in freq.most_common(top_k)]

def get_recent_summaries(meta, count=10):
    return [m["summary"] for m in meta[-count:]]